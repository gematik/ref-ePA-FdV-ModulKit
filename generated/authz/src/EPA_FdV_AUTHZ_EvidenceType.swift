//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------

import Foundation


public class EPA_FdV_AUTHZ_EvidenceType : NSObject ,EPA_FdV_AUTHZ_ISerializableObject
{
    private var  __source:DDXMLNode? = nil
    

    var AssertionIDRef:[String?]? = []

    var AssertionURIRef:[String?]? = []

    var Assertion:[EPA_FdV_AUTHZ_AssertionType?]? = []

    var EncryptedAssertion:[EPA_FdV_AUTHZ_EncryptedElementType?]? = []

    public required override init()
    {
        super.init()
    }
    public func loadWithXml(__node: DDXMLElement, __request:EPA_FdV_AUTHZ_RequestResultHandler)
    {
        __source=__node;
        for i :UInt in 0 ..< __node.childCount
        {
            let node=__node.child(at:i)
            if node?.kind==UInt(XMLElementKind)
            {
                let __node=node as! DDXMLElement
                if loadProperty(__node:__node, __request:__request) == false
                {
                }
            }
        }
    }

    public  func serialize(__parent:DDXMLElement, __request:EPA_FdV_AUTHZ_RequestResultHandler)
    {
        
            
        if self.AssertionIDRef != nil
        {
            for __item in self.AssertionIDRef!
            {
                let __AssertionIDRefItemElement=__request.writeElement(obj: __item, type:String.self, name:"AssertionIDRef", URI:"urn:oasis:names:tc:SAML:2.0:assertion", parent:__parent, skipNullProperty:false)
                if __AssertionIDRefItemElement != nil
                {
                    __AssertionIDRefItemElement!.stringValue = __item!;
                }
            }
        }
            
        if self.AssertionURIRef != nil
        {
            for __item in self.AssertionURIRef!
            {
                let __AssertionURIRefItemElement=__request.writeElement(obj: __item, type:String.self, name:"AssertionURIRef", URI:"urn:oasis:names:tc:SAML:2.0:assertion", parent:__parent, skipNullProperty:false)
                if __AssertionURIRefItemElement != nil
                {
                    __AssertionURIRefItemElement!.stringValue = __item!;
                }
            }
        }
            
        if self.Assertion != nil
        {
            for __item in self.Assertion!
            {
                let __AssertionItemElement=__request.writeElement(obj: __item, type:EPA_FdV_AUTHZ_AssertionType.self, name:"Assertion", URI:"urn:oasis:names:tc:SAML:2.0:assertion", parent:__parent, skipNullProperty:false)
                if __AssertionItemElement != nil
                {
                    __item!.serialize(__parent: __AssertionItemElement!, __request: __request);
                }
            }
        }
            
        if self.EncryptedAssertion != nil
        {
            for __item in self.EncryptedAssertion!
            {
                let __EncryptedAssertionItemElement=__request.writeElement(obj: __item, type:EPA_FdV_AUTHZ_EncryptedElementType.self, name:"EncryptedAssertion", URI:"urn:oasis:names:tc:SAML:2.0:assertion", parent:__parent, skipNullProperty:false)
                if __EncryptedAssertionItemElement != nil
                {
                    __item!.serialize(__parent: __EncryptedAssertionItemElement!, __request: __request);
                }
            }
        }

    }

    public   func loadProperty(__node: DDXMLElement, __request: EPA_FdV_AUTHZ_RequestResultHandler ) -> Bool
    {
        if __node.localName=="AssertionIDRef"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "AssertionIDRef")
            {
                if self.AssertionIDRef == nil
                {
                    self.AssertionIDRef = []
                }
                self.AssertionIDRef!.append(__node.stringValue!)
            }
            return true;
        }
        if __node.localName=="AssertionURIRef"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "AssertionURIRef")
            {
                if self.AssertionURIRef == nil
                {
                    self.AssertionURIRef = []
                }
                self.AssertionURIRef!.append(__node.stringValue!)
            }
            return true;
        }
        if __node.localName=="Assertion"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "Assertion")
            {
                if self.Assertion == nil
                {
                    self.Assertion = []
                }
                self.Assertion!.append(try! __request.createObject(node: __node, type:EPA_FdV_AUTHZ_AssertionType.self) as? EPA_FdV_AUTHZ_AssertionType)
            }
            return true;
        }
        if __node.localName=="EncryptedAssertion"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "EncryptedAssertion")
            {
                if self.EncryptedAssertion == nil
                {
                    self.EncryptedAssertion = []
                }
                self.EncryptedAssertion!.append(try! __request.createObject(node: __node, type:EPA_FdV_AUTHZ_EncryptedElementType.self) as? EPA_FdV_AUTHZ_EncryptedElementType)
            }
            return true;
        }
        return false
    }
    public func getOriginalXmlSource() ->DDXMLNode? 
    {
        return __source
    }
}