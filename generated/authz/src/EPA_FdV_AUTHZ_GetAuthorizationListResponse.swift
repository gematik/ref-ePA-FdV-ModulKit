//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------

import Foundation


public class EPA_FdV_AUTHZ_GetAuthorizationListResponse : NSObject ,EPA_FdV_AUTHZ_ISerializableObject
{
    private var  __source:DDXMLNode? = nil
    

    var AuthorizationInfo:[EPA_FdV_AUTHZ_AuthorizationInfoType?]? = []

    var AuthorizationKey:[EPA_FdV_AUTHZ_AuthorizationKeyType?]? = []

    public required override init()
    {
        super.init()
    }
    public func loadWithXml(__node: DDXMLElement, __request:EPA_FdV_AUTHZ_RequestResultHandler)
    {
        __source=__node;
        for i :UInt in 0 ..< __node.childCount
        {
            let node=__node.child(at:i)
            if node?.kind==UInt(XMLElementKind)
            {
                let __node=node as! DDXMLElement
                if loadProperty(__node:__node, __request:__request) == false
                {
                }
            }
        }
    }

    public  func serialize(__parent:DDXMLElement, __request:EPA_FdV_AUTHZ_RequestResultHandler)
    {
        
            
        if self.AuthorizationInfo != nil
        {
            for __item in self.AuthorizationInfo!
            {
                let __AuthorizationInfoItemElement=__request.writeElement(obj: __item, type:EPA_FdV_AUTHZ_AuthorizationInfoType.self, name:"AuthorizationInfo", URI:"http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1", parent:__parent, skipNullProperty:false)
                if __AuthorizationInfoItemElement != nil
                {
                    __item!.serialize(__parent: __AuthorizationInfoItemElement!, __request: __request);
                }
            }
        }
            
        if self.AuthorizationKey != nil
        {
            for __item in self.AuthorizationKey!
            {
                let __AuthorizationKeyItemElement=__request.writeElement(obj: __item, type:EPA_FdV_AUTHZ_AuthorizationKeyType.self, name:"AuthorizationKey", URI:"http://ws.gematik.de/fd/phrs/AuthorizationService/v1.1", parent:__parent, skipNullProperty:false)
                if __AuthorizationKeyItemElement != nil
                {
                    __item!.serialize(__parent: __AuthorizationKeyItemElement!, __request: __request);
                }
            }
        }

    }

    public   func loadProperty(__node: DDXMLElement, __request: EPA_FdV_AUTHZ_RequestResultHandler ) -> Bool
    {
        if __node.localName=="AuthorizationInfo"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "AuthorizationInfo")
            {
                if self.AuthorizationInfo == nil
                {
                    self.AuthorizationInfo = []
                }
                self.AuthorizationInfo!.append(try! __request.createObject(node: __node, type:EPA_FdV_AUTHZ_AuthorizationInfoType.self) as? EPA_FdV_AUTHZ_AuthorizationInfoType)
            }
            return true;
        }
        if __node.localName=="AuthorizationKey"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "AuthorizationKey")
            {
                if self.AuthorizationKey == nil
                {
                    self.AuthorizationKey = []
                }
                self.AuthorizationKey!.append(try! __request.createObject(node: __node, type:EPA_FdV_AUTHZ_AuthorizationKeyType.self) as? EPA_FdV_AUTHZ_AuthorizationKeyType)
            }
            return true;
        }
        return false
    }
    public func getOriginalXmlSource() ->DDXMLNode? 
    {
        return __source
    }
}