//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------

import Foundation

/**
* A telephone number (voice or fax), e-mail address, or
*                 other locator for a resource (information or service)
*                 mediated by telecommunication equipment. The address
*                 is specified as a URL
*                 qualified by time specification and use codes that help
*                 in deciding which address to use for a given time and
*                 purpose.
*/

public class EPA_FdV_AUTHZ_TEL : EPA_FdV_AUTHZ_URL 
{
    

	/**
	* Specifies the periods of time during which the
	*                                 telecommunication address can be used.  For a
	*                                 telephone number, this can indicate the time of day
	*                                 in which the party can be reached on that telephone.
	*                                 For a web address, it may specify a time range in
	*                                 which the web content is promised to be available
	*                                 under the given address.
	*/
    var useablePeriod:[EPA_FdV_AUTHZ_SXCM_TS?]? = []

	/**
	* One or more codes advising a system or user which
	*                             telecommunication address in a set of like addresses
	*                             to select for a given telecommunication need.
	*/
    var  use:String?

    public required init()
    {
        super.init()
    }
    public override func loadWithXml(__node: DDXMLElement, __request:EPA_FdV_AUTHZ_RequestResultHandler)
    {
        super.loadWithXml(__node:__node, __request: __request)
        if EPA_FdV_AUTHZ_Helper.hasAttribute(node: __node, name:"use", url:"")
        {
            self.use = EPA_FdV_AUTHZ_Helper.getAttribute(node: __node, name:"use", url:"")!.stringValue!
        }
    }

    public override func serialize(__parent:DDXMLElement, __request:EPA_FdV_AUTHZ_RequestResultHandler)
    {
        super.serialize(__parent:__parent, __request:__request)
        
            
        if self.useablePeriod != nil
        {
            for __item in self.useablePeriod!
            {
                let __useablePeriodItemElement=__request.writeElement(obj: __item, type:EPA_FdV_AUTHZ_SXCM_TS.self, name:"useablePeriod", URI:"urn:hl7-org:v3", parent:__parent, skipNullProperty:false)
                if __useablePeriodItemElement != nil
                {
                    __item!.serialize(__parent: __useablePeriodItemElement!, __request: __request);
                }
            }
        }
            
        if self.use != nil
        {
            let __useItemElement=__request.addAttribute(name: "use", URI:"", stringValue:"", element:__parent)
            __useItemElement.stringValue = self.use!;
        }

    }

    public override  func loadProperty(__node: DDXMLElement, __request: EPA_FdV_AUTHZ_RequestResultHandler ) -> Bool
    {
        if __node.localName=="useablePeriod"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "useablePeriod")
            {
                if self.useablePeriod == nil
                {
                    self.useablePeriod = []
                }
                self.useablePeriod!.append(try! __request.createObject(node: __node, type:EPA_FdV_AUTHZ_SXCM_TS.self) as? EPA_FdV_AUTHZ_SXCM_TS)
            }
            return true;
        }
        if __node.localName=="use"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "use")
            {
                self.use = __node.stringValue!
            }
            return true;
        }
        return super.loadProperty(__node:__node, __request:__request)
    }
}