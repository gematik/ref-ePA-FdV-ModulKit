//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------

import Foundation


public class EPA_FdV_AUTHZ_Kostentraeger : NSObject ,EPA_FdV_AUTHZ_ISerializableObject
{
    private var  __source:DDXMLNode? = nil
    

	/**
	* Gibt den Kostentraeger des Versicherten an. Es handelt sich um das bundesweit gueltige Institutionskennzeichen (IK) des jeweiligen Kostentraegers.
	*/
    var  Kostentraegerkennung:NSNumber=NSNumber(value:0)

	/**
	* Gibt den Kostentraegerlaendercode vom Kostentraeger des Versicherten an.
	* Anlage 8 (Staatsangehörigkeit und Länderkennzeichen für Auslandsanschriften) zur DEÜV, siehe www.gkv-datenaustausch.de/arbeitgeber/deuev/gemeinsame_rundschreiben/gemeinsame_rundschreiben.jsp
	*/
    var  Kostentraegerlaendercode:String=""

	/**
	* Gibt den Namen der Institution/Organisation an.
	*/
    var  Name:String=""

    public required override init()
    {
        super.init()
    }
    public func loadWithXml(__node: DDXMLElement, __request:EPA_FdV_AUTHZ_RequestResultHandler)
    {
        __source=__node;
        for i :UInt in 0 ..< __node.childCount
        {
            let node=__node.child(at:i)
            if node?.kind==UInt(XMLElementKind)
            {
                let __node=node as! DDXMLElement
                if loadProperty(__node:__node, __request:__request) == false
                {
                }
            }
        }
    }

    public  func serialize(__parent:DDXMLElement, __request:EPA_FdV_AUTHZ_RequestResultHandler)
    {
        
            
        let __KostentraegerkennungItemElement=__request.writeElement(obj: Kostentraegerkennung, type:NSNumber.self, name:"Kostentraegerkennung", URI:"http://ws.gematik.de/fa/vsdm/vsd/v5.2", parent:__parent, skipNullProperty:false)
        if __KostentraegerkennungItemElement != nil
        {
            __KostentraegerkennungItemElement!.stringValue = EPA_FdV_AUTHZ_Helper.getStringFromNumber(number: self.Kostentraegerkennung);
        }
            
        let __KostentraegerlaendercodeItemElement=__request.writeElement(obj: Kostentraegerlaendercode, type:String.self, name:"Kostentraegerlaendercode", URI:"http://ws.gematik.de/fa/vsdm/vsd/v5.2", parent:__parent, skipNullProperty:false)
        if __KostentraegerlaendercodeItemElement != nil
        {
            __KostentraegerlaendercodeItemElement!.stringValue = self.Kostentraegerlaendercode;
        }
            
        let __NameItemElement=__request.writeElement(obj: Name, type:String.self, name:"Name", URI:"http://ws.gematik.de/fa/vsdm/vsd/v5.2", parent:__parent, skipNullProperty:false)
        if __NameItemElement != nil
        {
            __NameItemElement!.stringValue = self.Name;
        }

    }

    public   func loadProperty(__node: DDXMLElement, __request: EPA_FdV_AUTHZ_RequestResultHandler ) -> Bool
    {
        if __node.localName=="Kostentraegerkennung"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "Kostentraegerkennung")
            {
                self.Kostentraegerkennung = EPA_FdV_AUTHZ_Helper.getNumber(stringNumber: __node.stringValue, isDecimal:false)!
            }
            return true;
        }
        if __node.localName=="Kostentraegerlaendercode"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "Kostentraegerlaendercode")
            {
                self.Kostentraegerlaendercode = __node.stringValue!
            }
            return true;
        }
        if __node.localName=="Name"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "Name")
            {
                self.Name = __node.stringValue!
            }
            return true;
        }
        return false
    }
    public func getOriginalXmlSource() ->DDXMLNode? 
    {
        return __source
    }
}