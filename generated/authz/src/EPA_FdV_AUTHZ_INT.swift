//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------

import Foundation

/**
* Integer numbers (-1,0,1,2, 100, 3398129, etc.) are precise
*                 numbers that are results of counting and enumerating.
*                 Integer numbers are discrete, the set of integers is
*                 infinite but countable.  No arbitrary limit is imposed on
*                 the range of integer numbers. Two NULL flavors are
*                 defined for the positive and negative infinity.
*/

public class EPA_FdV_AUTHZ_INT : EPA_FdV_AUTHZ_QTY 
{
    

    var  value:NSNumber?

    public required init()
    {
        super.init()
    }
    public override func loadWithXml(__node: DDXMLElement, __request:EPA_FdV_AUTHZ_RequestResultHandler)
    {
        super.loadWithXml(__node:__node, __request: __request)
        if EPA_FdV_AUTHZ_Helper.hasAttribute(node: __node, name:"value", url:"")
        {
            self.value = EPA_FdV_AUTHZ_Helper.getNumber(stringNumber: EPA_FdV_AUTHZ_Helper.getAttribute(node: __node, name:"value", url:"")!.stringValue, isDecimal:false)!
        }
    }

    public override func serialize(__parent:DDXMLElement, __request:EPA_FdV_AUTHZ_RequestResultHandler)
    {
        super.serialize(__parent:__parent, __request:__request)
        
            
        if self.value != nil
        {
            let __valueItemElement=__request.addAttribute(name: "value", URI:"", stringValue:"", element:__parent)
            __valueItemElement.stringValue = EPA_FdV_AUTHZ_Helper.getStringFromNumber(number: self.value!);
        }

    }

    public override  func loadProperty(__node: DDXMLElement, __request: EPA_FdV_AUTHZ_RequestResultHandler ) -> Bool
    {
        if __node.localName=="value"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "value")
            {
                self.value = EPA_FdV_AUTHZ_Helper.getNumber(stringNumber: __node.stringValue, isDecimal:false)!
            }
            return true;
        }
        return super.loadProperty(__node:__node, __request:__request)
    }
}