//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------


import Foundation

/**
* abstDomain: A19938 (C-0-T13953-A13954-A19938-cpt)
*/

public enum EPA_FdV_AUTHZ_ActExposureCode:Int,CustomStringConvertible
{
    case  HOMECARE
    case  CONVEYNC
    case  PLACE
    case  SUBSTNCE
    case  TRAVINT
    case  CHLDCARE
    case  HLTHCARE
    case  PTNTCARE
    case  HOSPPTNT
    case  HOSPVSTR
    case  HOUSEHLD
    case  INMATE
    case  INTIMATE
    case  LTRMCARE
    case  SCHOOL2
    case  SOCIAL2
    case  WORK2

    static func createWithXml(node:DDXMLNode) -> EPA_FdV_AUTHZ_ActExposureCode?
    {
        return createWithString(value: node.stringValue!)
    }

    static func createWithString(value:String) -> EPA_FdV_AUTHZ_ActExposureCode?
    {
        var i = 0
        while let item = EPA_FdV_AUTHZ_ActExposureCode(rawValue: i) 
        {
            if String(describing: item) == value
            {
                return item
            }
            i += 1
        }
       return nil
    }

    public var stringValue : String
    {
        return description
    }

    public var description : String
    {
        switch self
        {
            case  .HOMECARE: return "HOMECARE"
            case  .CONVEYNC: return "CONVEYNC"
            case  .PLACE: return "PLACE"
            case  .SUBSTNCE: return "SUBSTNCE"
            case  .TRAVINT: return "TRAVINT"
            case  .CHLDCARE: return "CHLDCARE"
            case  .HLTHCARE: return "HLTHCARE"
            case  .PTNTCARE: return "PTNTCARE"
            case  .HOSPPTNT: return "HOSPPTNT"
            case  .HOSPVSTR: return "HOSPVSTR"
            case  .HOUSEHLD: return "HOUSEHLD"
            case  .INMATE: return "INMATE"
            case  .INTIMATE: return "INTIMATE"
            case  .LTRMCARE: return "LTRMCARE"
            case  .SCHOOL2: return "SCHOOL2"
            case  .SOCIAL2: return "SOCIAL2"
            case  .WORK2: return "WORK2"
        }
    }

    public func getValue() -> Int
    {
        return rawValue
    }

    func serialize(__parent:DDXMLNode)
    {
        __parent.stringValue = stringValue
    }
}


        
