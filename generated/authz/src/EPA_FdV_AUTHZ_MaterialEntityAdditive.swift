//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------


import Foundation

/**
* abstDomain: A16042 (C-0-T16040-A16041-A19867-A16042-cpt)
*/

public enum EPA_FdV_AUTHZ_MaterialEntityAdditive:Int,CustomStringConvertible
{
    case  F10
    case  C32
    case  C38
    case  HCL6
    case  ACDA
    case  ACDB
    case  ACET
    case  AMIES
    case  HEPA
    case  BACTM
    case  BOR
    case  BOUIN
    case  BF10
    case  WEST
    case  BSKM
    case  CTAD
    case  CARS
    case  CARY
    case  CHLTM
    case  ENT
    case  JKM
    case  KARN
    case  LIA
    case  HEPL
    case  M4
    case  M4RT
    case  M5
    case  MMDTM
    case  MICHTM
    case  HNO3
    case  NONE
    case  PAGE
    case  PHENOL
    case  PVA
    case  KOX
    case  EDTK15
    case  EDTK75
    case  RLM
    case  SST
    case  SILICA
    case  NAF
    case  FL100
    case  FL10
    case  SPS
    case  HEPN
    case  EDTN
    case  STUTM
    case  THROM
    case  FDP
    case  THYMOL
    case  THYO
    case  TOLU
    case  URETM
    case  VIRTM

    static func createWithXml(node:DDXMLNode) -> EPA_FdV_AUTHZ_MaterialEntityAdditive?
    {
        return createWithString(value: node.stringValue!)
    }

    static func createWithString(value:String) -> EPA_FdV_AUTHZ_MaterialEntityAdditive?
    {
        var i = 0
        while let item = EPA_FdV_AUTHZ_MaterialEntityAdditive(rawValue: i) 
        {
            if String(describing: item) == value
            {
                return item
            }
            i += 1
        }
       return nil
    }

    public var stringValue : String
    {
        return description
    }

    public var description : String
    {
        switch self
        {
            case  .F10: return "F10"
            case  .C32: return "C32"
            case  .C38: return "C38"
            case  .HCL6: return "HCL6"
            case  .ACDA: return "ACDA"
            case  .ACDB: return "ACDB"
            case  .ACET: return "ACET"
            case  .AMIES: return "AMIES"
            case  .HEPA: return "HEPA"
            case  .BACTM: return "BACTM"
            case  .BOR: return "BOR"
            case  .BOUIN: return "BOUIN"
            case  .BF10: return "BF10"
            case  .WEST: return "WEST"
            case  .BSKM: return "BSKM"
            case  .CTAD: return "CTAD"
            case  .CARS: return "CARS"
            case  .CARY: return "CARY"
            case  .CHLTM: return "CHLTM"
            case  .ENT: return "ENT"
            case  .JKM: return "JKM"
            case  .KARN: return "KARN"
            case  .LIA: return "LIA"
            case  .HEPL: return "HEPL"
            case  .M4: return "M4"
            case  .M4RT: return "M4RT"
            case  .M5: return "M5"
            case  .MMDTM: return "MMDTM"
            case  .MICHTM: return "MICHTM"
            case  .HNO3: return "HNO3"
            case  .NONE: return "NONE"
            case  .PAGE: return "PAGE"
            case  .PHENOL: return "PHENOL"
            case  .PVA: return "PVA"
            case  .KOX: return "KOX"
            case  .EDTK15: return "EDTK15"
            case  .EDTK75: return "EDTK75"
            case  .RLM: return "RLM"
            case  .SST: return "SST"
            case  .SILICA: return "SILICA"
            case  .NAF: return "NAF"
            case  .FL100: return "FL100"
            case  .FL10: return "FL10"
            case  .SPS: return "SPS"
            case  .HEPN: return "HEPN"
            case  .EDTN: return "EDTN"
            case  .STUTM: return "STUTM"
            case  .THROM: return "THROM"
            case  .FDP: return "FDP"
            case  .THYMOL: return "THYMOL"
            case  .THYO: return "THYO"
            case  .TOLU: return "TOLU"
            case  .URETM: return "URETM"
            case  .VIRTM: return "VIRTM"
        }
    }

    public func getValue() -> Int
    {
        return rawValue
    }

    func serialize(__parent:DDXMLNode)
    {
        __parent.stringValue = stringValue
    }
}


        
