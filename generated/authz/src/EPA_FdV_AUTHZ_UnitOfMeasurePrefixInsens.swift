//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------


import Foundation

/**
* abstDomain: A12814 (C-0-T12549-A12814-cpt)
*/

public enum EPA_FdV_AUTHZ_UnitOfMeasurePrefixInsens:Int,CustomStringConvertible
{
    case  A
    case  C
    case  D
    case  DA
    case  EX
    case  F
    case  GIB
    case  GA
    case  H
    case  KIB
    case  K
    case  MIB
    case  MA
    case  U
    case  M
    case  N
    case  PT
    case  P
    case  TIB
    case  TR
    case  YO
    case  YA
    case  ZO
    case  ZA

    static func createWithXml(node:DDXMLNode) -> EPA_FdV_AUTHZ_UnitOfMeasurePrefixInsens?
    {
        return createWithString(value: node.stringValue!)
    }

    static func createWithString(value:String) -> EPA_FdV_AUTHZ_UnitOfMeasurePrefixInsens?
    {
        var i = 0
        while let item = EPA_FdV_AUTHZ_UnitOfMeasurePrefixInsens(rawValue: i) 
        {
            if String(describing: item) == value
            {
                return item
            }
            i += 1
        }
       return nil
    }

    public var stringValue : String
    {
        return description
    }

    public var description : String
    {
        switch self
        {
            case  .A: return "A"
            case  .C: return "C"
            case  .D: return "D"
            case  .DA: return "DA"
            case  .EX: return "EX"
            case  .F: return "F"
            case  .GIB: return "GIB"
            case  .GA: return "GA"
            case  .H: return "H"
            case  .KIB: return "KIB"
            case  .K: return "K"
            case  .MIB: return "MIB"
            case  .MA: return "MA"
            case  .U: return "U"
            case  .M: return "M"
            case  .N: return "N"
            case  .PT: return "PT"
            case  .P: return "P"
            case  .TIB: return "TIB"
            case  .TR: return "TR"
            case  .YO: return "YO"
            case  .YA: return "YA"
            case  .ZO: return "ZO"
            case  .ZA: return "ZA"
        }
    }

    public func getValue() -> Int
    {
        return rawValue
    }

    func serialize(__parent:DDXMLNode)
    {
        __parent.stringValue = stringValue
    }
}


        
