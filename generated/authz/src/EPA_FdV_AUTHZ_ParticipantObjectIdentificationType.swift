//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------

import Foundation


public class EPA_FdV_AUTHZ_ParticipantObjectIdentificationType : NSObject ,EPA_FdV_AUTHZ_ISerializableObject
{
    private var  __source:DDXMLNode? = nil
    

    var  ParticipantObjectIDTypeCode:EPA_FdV_AUTHZ_CodedValueType=EPA_FdV_AUTHZ_CodedValueType()

    var  ParticipantObjectName:String?

    var  ParticipantObjectQuery:Data?=Data()

    var ParticipantObjectDetail:[EPA_FdV_AUTHZ_TypeValuePairType?]? = []

    var  ParticipantObjectID:String=""

    var  ParticipantObjectTypeCode:EPA_FdV_AUTHZ_ParticipantObjectIdentificationType_ParticipantObjectTypeCode?

    var  ParticipantObjectTypeCodeRole:EPA_FdV_AUTHZ_ParticipantObjectIdentificationType_ParticipantObjectTypeCodeRole?

    var  ParticipantObjectDataLifeCycle:EPA_FdV_AUTHZ_ParticipantObjectIdentificationType_ParticipantObjectDataLifeCycle?

    var  ParticipantObjectSensitivity:String?

    public required override init()
    {
        super.init()
    }
    public func loadWithXml(__node: DDXMLElement, __request:EPA_FdV_AUTHZ_RequestResultHandler)
    {
        __source=__node;
        for i :UInt in 0 ..< __node.childCount
        {
            let node=__node.child(at:i)
            if node?.kind==UInt(XMLElementKind)
            {
                let __node=node as! DDXMLElement
                if loadProperty(__node:__node, __request:__request) == false
                {
                }
            }
        }
        if EPA_FdV_AUTHZ_Helper.hasAttribute(node: __node, name:"ParticipantObjectID", url:"")
        {
            self.ParticipantObjectID = EPA_FdV_AUTHZ_Helper.getAttribute(node: __node, name:"ParticipantObjectID", url:"")!.stringValue!
        }
        if EPA_FdV_AUTHZ_Helper.hasAttribute(node: __node, name:"ParticipantObjectTypeCode", url:"")
        {
            self.ParticipantObjectTypeCode = EPA_FdV_AUTHZ_ParticipantObjectIdentificationType_ParticipantObjectTypeCode.createWithXml(node: EPA_FdV_AUTHZ_Helper.getAttribute(node: __node, name:"ParticipantObjectTypeCode", url:"")!)!
        }
        if EPA_FdV_AUTHZ_Helper.hasAttribute(node: __node, name:"ParticipantObjectTypeCodeRole", url:"")
        {
            self.ParticipantObjectTypeCodeRole = EPA_FdV_AUTHZ_ParticipantObjectIdentificationType_ParticipantObjectTypeCodeRole.createWithXml(node: EPA_FdV_AUTHZ_Helper.getAttribute(node: __node, name:"ParticipantObjectTypeCodeRole", url:"")!)!
        }
        if EPA_FdV_AUTHZ_Helper.hasAttribute(node: __node, name:"ParticipantObjectDataLifeCycle", url:"")
        {
            self.ParticipantObjectDataLifeCycle = EPA_FdV_AUTHZ_ParticipantObjectIdentificationType_ParticipantObjectDataLifeCycle.createWithXml(node: EPA_FdV_AUTHZ_Helper.getAttribute(node: __node, name:"ParticipantObjectDataLifeCycle", url:"")!)!
        }
        if EPA_FdV_AUTHZ_Helper.hasAttribute(node: __node, name:"ParticipantObjectSensitivity", url:"")
        {
            self.ParticipantObjectSensitivity = EPA_FdV_AUTHZ_Helper.getAttribute(node: __node, name:"ParticipantObjectSensitivity", url:"")!.stringValue!
        }
    }

    public  func serialize(__parent:DDXMLElement, __request:EPA_FdV_AUTHZ_RequestResultHandler)
    {
        
            
        let __ParticipantObjectIDTypeCodeItemElement=__request.writeElement(obj: ParticipantObjectIDTypeCode, type:EPA_FdV_AUTHZ_CodedValueType.self, name:"ParticipantObjectIDTypeCode", URI:"http://ws.gematik.de/fa/phrext/v1.0", parent:__parent, skipNullProperty:false)
        if __ParticipantObjectIDTypeCodeItemElement != nil
        {
            self.ParticipantObjectIDTypeCode.serialize(__parent: __ParticipantObjectIDTypeCodeItemElement!, __request: __request);
        }
            
        let __ParticipantObjectNameItemElement=__request.writeElement(obj: ParticipantObjectName, type:String.self, name:"ParticipantObjectName", URI:"http://ws.gematik.de/fa/phrext/v1.0", parent:__parent, skipNullProperty:true)
        if __ParticipantObjectNameItemElement != nil
        {
            __ParticipantObjectNameItemElement!.stringValue = self.ParticipantObjectName!;
        }
            
        let __ParticipantObjectQueryItemElement=__request.writeElement(obj: ParticipantObjectQuery, type:Data.self, name:"ParticipantObjectQuery", URI:"http://ws.gematik.de/fa/phrext/v1.0", parent:__parent, skipNullProperty:true)
        if __ParticipantObjectQueryItemElement != nil
        {
            __request.setBinary(propertyElement: __ParticipantObjectQueryItemElement!, data:self.ParticipantObjectQuery!, isSwaRef:false, isAttribute:false);
        }
            
        if self.ParticipantObjectDetail != nil
        {
            for __item in self.ParticipantObjectDetail!
            {
                let __ParticipantObjectDetailItemElement=__request.writeElement(obj: __item, type:EPA_FdV_AUTHZ_TypeValuePairType.self, name:"ParticipantObjectDetail", URI:"http://ws.gematik.de/fa/phrext/v1.0", parent:__parent, skipNullProperty:false)
                if __ParticipantObjectDetailItemElement != nil
                {
                    __item!.serialize(__parent: __ParticipantObjectDetailItemElement!, __request: __request);
                }
            }
        }
            
        let __ParticipantObjectIDItemElement=__request.addAttribute(name: "ParticipantObjectID", URI:"", stringValue:"", element:__parent)
        __ParticipantObjectIDItemElement.stringValue = self.ParticipantObjectID;    
            
        if self.ParticipantObjectTypeCode != nil
        {
            let __ParticipantObjectTypeCodeItemElement=__request.addAttribute(name: "ParticipantObjectTypeCode", URI:"", stringValue:"", element:__parent)
            self.ParticipantObjectTypeCode!.serialize(__parent: __ParticipantObjectTypeCodeItemElement);
        }
            
        if self.ParticipantObjectTypeCodeRole != nil
        {
            let __ParticipantObjectTypeCodeRoleItemElement=__request.addAttribute(name: "ParticipantObjectTypeCodeRole", URI:"", stringValue:"", element:__parent)
            self.ParticipantObjectTypeCodeRole!.serialize(__parent: __ParticipantObjectTypeCodeRoleItemElement);
        }
            
        if self.ParticipantObjectDataLifeCycle != nil
        {
            let __ParticipantObjectDataLifeCycleItemElement=__request.addAttribute(name: "ParticipantObjectDataLifeCycle", URI:"", stringValue:"", element:__parent)
            self.ParticipantObjectDataLifeCycle!.serialize(__parent: __ParticipantObjectDataLifeCycleItemElement);
        }
            
        if self.ParticipantObjectSensitivity != nil
        {
            let __ParticipantObjectSensitivityItemElement=__request.addAttribute(name: "ParticipantObjectSensitivity", URI:"", stringValue:"", element:__parent)
            __ParticipantObjectSensitivityItemElement.stringValue = self.ParticipantObjectSensitivity!;
        }

    }

    public   func loadProperty(__node: DDXMLElement, __request: EPA_FdV_AUTHZ_RequestResultHandler ) -> Bool
    {
        if __node.localName=="ParticipantObjectIDTypeCode"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "ParticipantObjectIDTypeCode")
            {
                self.ParticipantObjectIDTypeCode = try! __request.createObject(node: __node, type:EPA_FdV_AUTHZ_CodedValueType.self) as! EPA_FdV_AUTHZ_CodedValueType
            }
            return true;
        }
        if __node.localName=="ParticipantObjectName"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "ParticipantObjectName")
            {
                self.ParticipantObjectName = __node.stringValue!
            }
            return true;
        }
        if __node.localName=="ParticipantObjectQuery"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "ParticipantObjectQuery")
            {
                self.ParticipantObjectQuery = __request.getBinary(element: __node,isSwaRef:false, isAttribute:false)
            }
            return true;
        }
        if __node.localName=="ParticipantObjectDetail"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "ParticipantObjectDetail")
            {
                if self.ParticipantObjectDetail == nil
                {
                    self.ParticipantObjectDetail = []
                }
                self.ParticipantObjectDetail!.append(try! __request.createObject(node: __node, type:EPA_FdV_AUTHZ_TypeValuePairType.self) as? EPA_FdV_AUTHZ_TypeValuePairType)
            }
            return true;
        }
        if __node.localName=="ParticipantObjectID"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "ParticipantObjectID")
            {
                self.ParticipantObjectID = __node.stringValue!
            }
            return true;
        }
        if __node.localName=="ParticipantObjectTypeCode"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "ParticipantObjectTypeCode")
            {
                self.ParticipantObjectTypeCode = EPA_FdV_AUTHZ_ParticipantObjectIdentificationType_ParticipantObjectTypeCode.createWithXml(node: __node)!
            }
            return true;
        }
        if __node.localName=="ParticipantObjectTypeCodeRole"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "ParticipantObjectTypeCodeRole")
            {
                self.ParticipantObjectTypeCodeRole = EPA_FdV_AUTHZ_ParticipantObjectIdentificationType_ParticipantObjectTypeCodeRole.createWithXml(node: __node)!
            }
            return true;
        }
        if __node.localName=="ParticipantObjectDataLifeCycle"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "ParticipantObjectDataLifeCycle")
            {
                self.ParticipantObjectDataLifeCycle = EPA_FdV_AUTHZ_ParticipantObjectIdentificationType_ParticipantObjectDataLifeCycle.createWithXml(node: __node)!
            }
            return true;
        }
        if __node.localName=="ParticipantObjectSensitivity"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "ParticipantObjectSensitivity")
            {
                self.ParticipantObjectSensitivity = __node.stringValue!
            }
            return true;
        }
        return false
    }
    public func getOriginalXmlSource() ->DDXMLNode? 
    {
        return __source
    }
}