//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------

import Foundation

/**
* A character string token representing a part of a name.
*                 May have a type code signifying the role of the part in
*                 the whole entity name, and a qualifier code for more detail
*                 about the name part type. Typical name parts for person
*                 names are given names, and family names, titles, etc.
*/

public class EPA_FdV_AUTHZ_ENXP : EPA_FdV_AUTHZ_ST 
{
    

	/**
	* Indicates whether the name part is a given name, family
	*                             name, prefix, suffix, etc.
	*/
    var  partType:String=""

	/**
	* is a set of codes each of which specifies
	*                             a certain subcategory of the name part in addition to
	*                             the main name part type. For example, a given name may
	*                             be flagged as a nickname, a family name may be a
	*                             pseudonym or a name of public records.
	*/
    var  qualifier:String?

    public required init()
    {
        super.init()
    }
    public override func loadWithXml(__node: DDXMLElement, __request:EPA_FdV_AUTHZ_RequestResultHandler)
    {
        super.loadWithXml(__node:__node, __request: __request)
        if EPA_FdV_AUTHZ_Helper.hasAttribute(node: __node, name:"partType", url:"")
        {
            self.partType = EPA_FdV_AUTHZ_Helper.getAttribute(node: __node, name:"partType", url:"")!.stringValue!
        }
        if EPA_FdV_AUTHZ_Helper.hasAttribute(node: __node, name:"qualifier", url:"")
        {
            self.qualifier = EPA_FdV_AUTHZ_Helper.getAttribute(node: __node, name:"qualifier", url:"")!.stringValue!
        }
    }

    public override func serialize(__parent:DDXMLElement, __request:EPA_FdV_AUTHZ_RequestResultHandler)
    {
        super.serialize(__parent:__parent, __request:__request)
        
            
        let __partTypeItemElement=__request.addAttribute(name: "partType", URI:"", stringValue:"", element:__parent)
        __partTypeItemElement.stringValue = self.partType;    
            
        if self.qualifier != nil
        {
            let __qualifierItemElement=__request.addAttribute(name: "qualifier", URI:"", stringValue:"", element:__parent)
            __qualifierItemElement.stringValue = self.qualifier!;
        }

    }

    public override  func loadProperty(__node: DDXMLElement, __request: EPA_FdV_AUTHZ_RequestResultHandler ) -> Bool
    {
        if __node.localName=="partType"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "partType")
            {
                self.partType = __node.stringValue!
            }
            return true;
        }
        if __node.localName=="qualifier"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "qualifier")
            {
                self.qualifier = __node.stringValue!
            }
            return true;
        }
        return super.loadProperty(__node:__node, __request:__request)
    }
}