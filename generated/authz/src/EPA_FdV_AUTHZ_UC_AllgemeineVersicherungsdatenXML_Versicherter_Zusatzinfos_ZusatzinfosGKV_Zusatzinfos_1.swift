//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------

import Foundation


public class EPA_FdV_AUTHZ_UC_AllgemeineVersicherungsdatenXML_Versicherter_Zusatzinfos_ZusatzinfosGKV_Zusatzinfos_1 : NSObject ,EPA_FdV_AUTHZ_ISerializableObject
{
    private var  __source:DDXMLNode? = nil
    

	/**
	* Gibt an, ob der Kostentraeger den Nachweis der Inanspruchnahme von Leistungen der Abrechnungsart Kostenerstattung auf der eGK speichert. 
	* vorhanden = Nachweis wird genutzt; 
	* nichtvorhanden = Nachweis wird nicht genutzt
	*/
    var  Kostenerstattung:EPA_FdV_AUTHZ_UC_AllgemeineVersicherungsdatenXML_Versicherter_Zusatzinfos_ZusatzinfosGKV_Zusatzinfos?

	/**
	* Das Kennzeichen WOP ist gemaess § 2 Abs. 2 der Vereinbarung zur Festsetzung des Durchschnittsbetrages gemaess Artikel 2 § 2 Abs. 2 des Gesetzes zur Einfuehrung des Wohnortprinzips bei Honorarvereinbarungen fuer Aerzte und Zahnaerzte und zur Krankenversichertenkarte gemaess § 291 Abs. 2 Fuenftes Sozialgesetzbuch (SGB V) erforderlich.
	* 01 = Schleswig-Holstein
	* 02 = Hamburg
	* 03 = Bremen
	* 17 = Niedersachsen
	* 20 = Westfalen-Lippe
	* 38 = Nordrhein
	* 46 = Hessen
	* 51 = Rheinland-Pfalz
	* 52 = Baden-Württemberg
	* 71 = Bayerns
	* 72 = Berlin
	* 73 = Saarland
	* 78 = Mecklenburg-Vorpommern
	* 83 = Brandenburg
	* 88 = Sachsen-Anhalt
	* 93 = Thüringen
	* 98 = Sachsen
	* Gemäß Anlage 21 BMV-Ä und EKV.
	*/
    var  WOP:String=""

    public required override init()
    {
        super.init()
    }
    public func loadWithXml(__node: DDXMLElement, __request:EPA_FdV_AUTHZ_RequestResultHandler)
    {
        __source=__node;
        for i :UInt in 0 ..< __node.childCount
        {
            let node=__node.child(at:i)
            if node?.kind==UInt(XMLElementKind)
            {
                let __node=node as! DDXMLElement
                if loadProperty(__node:__node, __request:__request) == false
                {
                }
            }
        }
    }

    public  func serialize(__parent:DDXMLElement, __request:EPA_FdV_AUTHZ_RequestResultHandler)
    {
        
            
        let __KostenerstattungItemElement=__request.writeElement(obj: Kostenerstattung, type:EPA_FdV_AUTHZ_UC_AllgemeineVersicherungsdatenXML_Versicherter_Zusatzinfos_ZusatzinfosGKV_Zusatzinfos.self, name:"Kostenerstattung", URI:"http://ws.gematik.de/fa/vsdm/vsd/v5.2", parent:__parent, skipNullProperty:true)
        if __KostenerstattungItemElement != nil
        {
            self.Kostenerstattung!.serialize(__parent: __KostenerstattungItemElement!, __request: __request);
        }
            
        let __WOPItemElement=__request.writeElement(obj: WOP, type:String.self, name:"WOP", URI:"http://ws.gematik.de/fa/vsdm/vsd/v5.2", parent:__parent, skipNullProperty:false)
        if __WOPItemElement != nil
        {
            __WOPItemElement!.stringValue = self.WOP;
        }

    }

    public   func loadProperty(__node: DDXMLElement, __request: EPA_FdV_AUTHZ_RequestResultHandler ) -> Bool
    {
        if __node.localName=="Kostenerstattung"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "Kostenerstattung")
            {
                self.Kostenerstattung = try! __request.createObject(node: __node, type:EPA_FdV_AUTHZ_UC_AllgemeineVersicherungsdatenXML_Versicherter_Zusatzinfos_ZusatzinfosGKV_Zusatzinfos.self) as? EPA_FdV_AUTHZ_UC_AllgemeineVersicherungsdatenXML_Versicherter_Zusatzinfos_ZusatzinfosGKV_Zusatzinfos
            }
            return true;
        }
        if __node.localName=="WOP"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "WOP")
            {
                self.WOP = __node.stringValue!
            }
            return true;
        }
        return false
    }
    public func getOriginalXmlSource() ->DDXMLNode? 
    {
        return __source
    }
}