//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------


import Foundation


public enum EPA_FdV_AUTHZ_AuthorizationTypeType:Int,CustomStringConvertible
{
/**
* Autorisierung mit Dokumentenzugriff (Standardfall Zugriff auf medizinische Daten und Dokumente)
*/
    case  DOCUMENT_AUTHORIZATION
/**
* Autorisierung zur Umschlüsselung ohne Zugriff auf medizinische Daten eines Kontos
*/
    case  RECOVERY_AUTHORIZATION
/**
* Autorisierung im Zusammenhang mit Kontoaktivierung, Aktenumzug bzw. Anbieterwechsel oder anderen Anwendungsfällen, in denen für den Versicherten kein gültiges Schlüsselmaterial vorhanden ist
*/
    case  ACCOUNT_AUTHORIZATION

    static func createWithXml(node:DDXMLNode) -> EPA_FdV_AUTHZ_AuthorizationTypeType?
    {
        return createWithString(value: node.stringValue!)
    }

    static func createWithString(value:String) -> EPA_FdV_AUTHZ_AuthorizationTypeType?
    {
        var i = 0
        while let item = EPA_FdV_AUTHZ_AuthorizationTypeType(rawValue: i) 
        {
            if String(describing: item) == value
            {
                return item
            }
            i += 1
        }
       return nil
    }

    public var stringValue : String
    {
        return description
    }

    public var description : String
    {
        switch self
        {
/**
* Autorisierung mit Dokumentenzugriff (Standardfall Zugriff auf medizinische Daten und Dokumente)
*/
            case  .DOCUMENT_AUTHORIZATION: return "DOCUMENT_AUTHORIZATION"
/**
* Autorisierung zur Umschlüsselung ohne Zugriff auf medizinische Daten eines Kontos
*/
            case  .RECOVERY_AUTHORIZATION: return "RECOVERY_AUTHORIZATION"
/**
* Autorisierung im Zusammenhang mit Kontoaktivierung, Aktenumzug bzw. Anbieterwechsel oder anderen Anwendungsfällen, in denen für den Versicherten kein gültiges Schlüsselmaterial vorhanden ist
*/
            case  .ACCOUNT_AUTHORIZATION: return "ACCOUNT_AUTHORIZATION"
        }
    }

    public func getValue() -> Int
    {
        return rawValue
    }

    func serialize(__parent:DDXMLNode)
    {
        __parent.stringValue = stringValue
    }
}


        
