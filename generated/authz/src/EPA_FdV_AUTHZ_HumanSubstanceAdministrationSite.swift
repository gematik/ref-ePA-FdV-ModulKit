//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------


import Foundation

/**
* abstDomain: A19724 (C-0-T16537-A16538-A19724-cpt)
*/

public enum EPA_FdV_AUTHZ_HumanSubstanceAdministrationSite:Int,CustomStringConvertible
{
    case  BE
    case  OU
    case  BU
    case  LACF
    case  LAC
    case  LA
    case  LD
    case  LE
    case  LEJ
    case  OS
    case  LF
    case  LG
    case  LH
    case  LIJ
    case  LLAQ
    case  LLFA
    case  LMFA
    case  LN
    case  LPC
    case  LSC
    case  LT
    case  LUAQ
    case  LUA
    case  LUFA
    case  LVL
    case  LVG
    case  PA
    case  PERIN
    case  RACF
    case  RAC
    case  RA
    case  RD
    case  RE
    case  REJ
    case  OD
    case  RF
    case  RG
    case  RH
    case  RIJ
    case  RLAQ
    case  RLFA
    case  RMFA
    case  RPC
    case  RSC
    case  RT
    case  RUAQ
    case  RUA
    case  RUFA
    case  RVL
    case  RVG
    case  BN

    static func createWithXml(node:DDXMLNode) -> EPA_FdV_AUTHZ_HumanSubstanceAdministrationSite?
    {
        return createWithString(value: node.stringValue!)
    }

    static func createWithString(value:String) -> EPA_FdV_AUTHZ_HumanSubstanceAdministrationSite?
    {
        var i = 0
        while let item = EPA_FdV_AUTHZ_HumanSubstanceAdministrationSite(rawValue: i) 
        {
            if String(describing: item) == value
            {
                return item
            }
            i += 1
        }
       return nil
    }

    public var stringValue : String
    {
        return description
    }

    public var description : String
    {
        switch self
        {
            case  .BE: return "BE"
            case  .OU: return "OU"
            case  .BU: return "BU"
            case  .LACF: return "LACF"
            case  .LAC: return "LAC"
            case  .LA: return "LA"
            case  .LD: return "LD"
            case  .LE: return "LE"
            case  .LEJ: return "LEJ"
            case  .OS: return "OS"
            case  .LF: return "LF"
            case  .LG: return "LG"
            case  .LH: return "LH"
            case  .LIJ: return "LIJ"
            case  .LLAQ: return "LLAQ"
            case  .LLFA: return "LLFA"
            case  .LMFA: return "LMFA"
            case  .LN: return "LN"
            case  .LPC: return "LPC"
            case  .LSC: return "LSC"
            case  .LT: return "LT"
            case  .LUAQ: return "LUAQ"
            case  .LUA: return "LUA"
            case  .LUFA: return "LUFA"
            case  .LVL: return "LVL"
            case  .LVG: return "LVG"
            case  .PA: return "PA"
            case  .PERIN: return "PERIN"
            case  .RACF: return "RACF"
            case  .RAC: return "RAC"
            case  .RA: return "RA"
            case  .RD: return "RD"
            case  .RE: return "RE"
            case  .REJ: return "REJ"
            case  .OD: return "OD"
            case  .RF: return "RF"
            case  .RG: return "RG"
            case  .RH: return "RH"
            case  .RIJ: return "RIJ"
            case  .RLAQ: return "RLAQ"
            case  .RLFA: return "RLFA"
            case  .RMFA: return "RMFA"
            case  .RPC: return "RPC"
            case  .RSC: return "RSC"
            case  .RT: return "RT"
            case  .RUAQ: return "RUAQ"
            case  .RUA: return "RUA"
            case  .RUFA: return "RUFA"
            case  .RVL: return "RVL"
            case  .RVG: return "RVG"
            case  .BN: return "BN"
        }
    }

    public func getValue() -> Int
    {
        return rawValue
    }

    func serialize(__parent:DDXMLNode)
    {
        __parent.stringValue = stringValue
    }
}


        
