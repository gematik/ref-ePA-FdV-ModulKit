//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------

import Foundation


public class EPA_FdV_AUTHZ_X509DataType : NSObject ,EPA_FdV_AUTHZ_ISerializableObject
{
    private var  __source:DDXMLNode? = nil
    

    var  X509IssuerSerial:EPA_FdV_AUTHZ_X509IssuerSerialType?

    var  X509SKI:Data?=Data()

    var  X509SubjectName:String?

    var  X509Certificate:Data?=Data()

    var  X509CRL:Data?=Data()

    var any=[Any]()

    public required override init()
    {
        super.init()
    }
    public func loadWithXml(__node: DDXMLElement, __request:EPA_FdV_AUTHZ_RequestResultHandler)
    {
        __source=__node;
        for i :UInt in 0 ..< __node.childCount
        {
            let node=__node.child(at:i)
            if node?.kind==UInt(XMLElementKind)
            {
                let __node=node as! DDXMLElement
                if loadProperty(__node:__node, __request:__request) == false
                {
                    self.any.append(__request.getAny(node: __node))
                }
            }
        }
    }

    public  func serialize(__parent:DDXMLElement, __request:EPA_FdV_AUTHZ_RequestResultHandler)
    {
        
            
        let __X509IssuerSerialItemElement=__request.writeElement(obj: X509IssuerSerial, type:EPA_FdV_AUTHZ_X509IssuerSerialType.self, name:"X509IssuerSerial", URI:"http://www.w3.org/2000/09/xmldsig#", parent:__parent, skipNullProperty:true)
        if __X509IssuerSerialItemElement != nil
        {
            self.X509IssuerSerial!.serialize(__parent: __X509IssuerSerialItemElement!, __request: __request);
        }
            
        let __X509SKIItemElement=__request.writeElement(obj: X509SKI, type:Data.self, name:"X509SKI", URI:"http://www.w3.org/2000/09/xmldsig#", parent:__parent, skipNullProperty:true)
        if __X509SKIItemElement != nil
        {
            __request.setBinary(propertyElement: __X509SKIItemElement!, data:self.X509SKI!, isSwaRef:false, isAttribute:false);
        }
            
        let __X509SubjectNameItemElement=__request.writeElement(obj: X509SubjectName, type:String.self, name:"X509SubjectName", URI:"http://www.w3.org/2000/09/xmldsig#", parent:__parent, skipNullProperty:true)
        if __X509SubjectNameItemElement != nil
        {
            __X509SubjectNameItemElement!.stringValue = self.X509SubjectName!;
        }
            
        let __X509CertificateItemElement=__request.writeElement(obj: X509Certificate, type:Data.self, name:"X509Certificate", URI:"http://www.w3.org/2000/09/xmldsig#", parent:__parent, skipNullProperty:true)
        if __X509CertificateItemElement != nil
        {
            __request.setBinary(propertyElement: __X509CertificateItemElement!, data:self.X509Certificate!, isSwaRef:false, isAttribute:false);
        }
            
        let __X509CRLItemElement=__request.writeElement(obj: X509CRL, type:Data.self, name:"X509CRL", URI:"http://www.w3.org/2000/09/xmldsig#", parent:__parent, skipNullProperty:true)
        if __X509CRLItemElement != nil
        {
            __request.setBinary(propertyElement: __X509CRLItemElement!, data:self.X509CRL!, isSwaRef:false, isAttribute:false);
        }
            
        for case let elem as DDXMLNode in self.any
        {
            elem.detach()
            __parent.addChild(elem)
        }

    }

    public   func loadProperty(__node: DDXMLElement, __request: EPA_FdV_AUTHZ_RequestResultHandler ) -> Bool
    {
        if __node.localName=="X509IssuerSerial"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "X509IssuerSerial")
            {
                self.X509IssuerSerial = try! __request.createObject(node: __node, type:EPA_FdV_AUTHZ_X509IssuerSerialType.self) as? EPA_FdV_AUTHZ_X509IssuerSerialType
            }
            return true;
        }
        if __node.localName=="X509SKI"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "X509SKI")
            {
                self.X509SKI = __request.getBinary(element: __node,isSwaRef:false, isAttribute:false)
            }
            return true;
        }
        if __node.localName=="X509SubjectName"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "X509SubjectName")
            {
                self.X509SubjectName = __node.stringValue!
            }
            return true;
        }
        if __node.localName=="X509Certificate"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "X509Certificate")
            {
                self.X509Certificate = __request.getBinary(element: __node,isSwaRef:false, isAttribute:false)
            }
            return true;
        }
        if __node.localName=="X509CRL"
        {
            if EPA_FdV_AUTHZ_Helper.isValue(node:__node, name: "X509CRL")
            {
                self.X509CRL = __request.getBinary(element: __node,isSwaRef:false, isAttribute:false)
            }
            return true;
        }
        return false
    }
    public func getOriginalXmlSource() ->DDXMLNode? 
    {
        return __source
    }
}