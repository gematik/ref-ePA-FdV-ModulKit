//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------


import Foundation

/**
* abstDomain: A19751 (C-0-T13953-A19820-A16226-A19751-cpt)
*/

public enum EPA_FdV_AUTHZ_MedicationObservationType:Int,CustomStringConvertible
{
    case  SPLCOATING
    case  SPLCOLOR
    case  SPLIMAGE
    case  SPLIMPRINT
    case  REP_HALF_LIFE
    case  SPLSCORING
    case  SPLSHAPE
    case  SPLSIZE
    case  SPLSYMBOL

    static func createWithXml(node:DDXMLNode) -> EPA_FdV_AUTHZ_MedicationObservationType?
    {
        return createWithString(value: node.stringValue!)
    }

    static func createWithString(value:String) -> EPA_FdV_AUTHZ_MedicationObservationType?
    {
        var i = 0
        while let item = EPA_FdV_AUTHZ_MedicationObservationType(rawValue: i) 
        {
            if String(describing: item) == value
            {
                return item
            }
            i += 1
        }
       return nil
    }

    public var stringValue : String
    {
        return description
    }

    public var description : String
    {
        switch self
        {
            case  .SPLCOATING: return "SPLCOATING"
            case  .SPLCOLOR: return "SPLCOLOR"
            case  .SPLIMAGE: return "SPLIMAGE"
            case  .SPLIMPRINT: return "SPLIMPRINT"
            case  .REP_HALF_LIFE: return "REP_HALF_LIFE"
            case  .SPLSCORING: return "SPLSCORING"
            case  .SPLSHAPE: return "SPLSHAPE"
            case  .SPLSIZE: return "SPLSIZE"
            case  .SPLSYMBOL: return "SPLSYMBOL"
        }
    }

    public func getValue() -> Int
    {
        return rawValue
    }

    func serialize(__parent:DDXMLNode)
    {
        __parent.stringValue = stringValue
    }
}


        
