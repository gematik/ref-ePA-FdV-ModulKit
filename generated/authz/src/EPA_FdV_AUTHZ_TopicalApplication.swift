//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------


import Foundation

/**
* abstDomain: A14739 (C-0-T14581-A16931-A14739-cpt)
*/

public enum EPA_FdV_AUTHZ_TopicalApplication:Int,CustomStringConvertible
{
    case  OCDRESTA
    case  SUBCONJTA
    case  TOPICAL
    case  BUC
    case  CERV
    case  DEN
    case  GIN
    case  HAIR
    case  ICORNTA
    case  ICORONTA
    case  IESOPHTA
    case  IILEALTA
    case  ILTOP
    case  ILUMTA
    case  IOTOP
    case  IONTO
    case  LARYNGTA
    case  MUC
    case  NAIL
    case  NASAL
    case  OPTHALTA
    case  ORALTA
    case  ORMUC
    case  OROPHARTA
    case  PERIANAL
    case  PERINEAL
    case  PDONTTA
    case  RECTAL
    case  SCALP
    case  SKIN
    case  DRESS
    case  SWAB
    case  TMUCTA
    case  VAGINS

    static func createWithXml(node:DDXMLNode) -> EPA_FdV_AUTHZ_TopicalApplication?
    {
        return createWithString(value: node.stringValue!)
    }

    static func createWithString(value:String) -> EPA_FdV_AUTHZ_TopicalApplication?
    {
        var i = 0
        while let item = EPA_FdV_AUTHZ_TopicalApplication(rawValue: i) 
        {
            if String(describing: item) == value
            {
                return item
            }
            i += 1
        }
       return nil
    }

    public var stringValue : String
    {
        return description
    }

    public var description : String
    {
        switch self
        {
            case  .OCDRESTA: return "OCDRESTA"
            case  .SUBCONJTA: return "SUBCONJTA"
            case  .TOPICAL: return "TOPICAL"
            case  .BUC: return "BUC"
            case  .CERV: return "CERV"
            case  .DEN: return "DEN"
            case  .GIN: return "GIN"
            case  .HAIR: return "HAIR"
            case  .ICORNTA: return "ICORNTA"
            case  .ICORONTA: return "ICORONTA"
            case  .IESOPHTA: return "IESOPHTA"
            case  .IILEALTA: return "IILEALTA"
            case  .ILTOP: return "ILTOP"
            case  .ILUMTA: return "ILUMTA"
            case  .IOTOP: return "IOTOP"
            case  .IONTO: return "IONTO"
            case  .LARYNGTA: return "LARYNGTA"
            case  .MUC: return "MUC"
            case  .NAIL: return "NAIL"
            case  .NASAL: return "NASAL"
            case  .OPTHALTA: return "OPTHALTA"
            case  .ORALTA: return "ORALTA"
            case  .ORMUC: return "ORMUC"
            case  .OROPHARTA: return "OROPHARTA"
            case  .PERIANAL: return "PERIANAL"
            case  .PERINEAL: return "PERINEAL"
            case  .PDONTTA: return "PDONTTA"
            case  .RECTAL: return "RECTAL"
            case  .SCALP: return "SCALP"
            case  .SKIN: return "SKIN"
            case  .DRESS: return "DRESS"
            case  .SWAB: return "SWAB"
            case  .TMUCTA: return "TMUCTA"
            case  .VAGINS: return "VAGINS"
        }
    }

    public func getValue() -> Int
    {
        return rawValue
    }

    func serialize(__parent:DDXMLNode)
    {
        __parent.stringValue = stringValue
    }
}


        
