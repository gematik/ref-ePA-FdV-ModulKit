//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------


import Foundation

/**
* vocSet: T227 (C-0-T227-cpt)
*/

public enum EPA_FdV_AUTHZ_VaccineManufacturer:Int,CustomStringConvertible
{
    case  AB
    case  AD
    case  ALP
    case  AR
    case  PMC
    case  AVI
    case  BA
    case  BAY
    case  BPC
    case  BP
    case  MIP
    case  CEN
    case  CHI
    case  CON
    case  EVN
    case  GRE
    case  IAG
    case  IUS
    case  KGC
    case  LED
    case  MA
    case  MED
    case  MSD
    case  IM
    case  MIL
    case  NAB
    case  NYB
    case  NAV
    case  NOV
    case  OTC
    case  ORT
    case  PD
    case  PRX
    case  SCL
    case  SKB
    case  SI
    case  JPN
    case  USA
    case  WAL
    case  WA

    static func createWithXml(node:DDXMLNode) -> EPA_FdV_AUTHZ_VaccineManufacturer?
    {
        return createWithString(value: node.stringValue!)
    }

    static func createWithString(value:String) -> EPA_FdV_AUTHZ_VaccineManufacturer?
    {
        var i = 0
        while let item = EPA_FdV_AUTHZ_VaccineManufacturer(rawValue: i) 
        {
            if String(describing: item) == value
            {
                return item
            }
            i += 1
        }
       return nil
    }

    public var stringValue : String
    {
        return description
    }

    public var description : String
    {
        switch self
        {
            case  .AB: return "AB"
            case  .AD: return "AD"
            case  .ALP: return "ALP"
            case  .AR: return "AR"
            case  .PMC: return "PMC"
            case  .AVI: return "AVI"
            case  .BA: return "BA"
            case  .BAY: return "BAY"
            case  .BPC: return "BPC"
            case  .BP: return "BP"
            case  .MIP: return "MIP"
            case  .CEN: return "CEN"
            case  .CHI: return "CHI"
            case  .CON: return "CON"
            case  .EVN: return "EVN"
            case  .GRE: return "GRE"
            case  .IAG: return "IAG"
            case  .IUS: return "IUS"
            case  .KGC: return "KGC"
            case  .LED: return "LED"
            case  .MA: return "MA"
            case  .MED: return "MED"
            case  .MSD: return "MSD"
            case  .IM: return "IM"
            case  .MIL: return "MIL"
            case  .NAB: return "NAB"
            case  .NYB: return "NYB"
            case  .NAV: return "NAV"
            case  .NOV: return "NOV"
            case  .OTC: return "OTC"
            case  .ORT: return "ORT"
            case  .PD: return "PD"
            case  .PRX: return "PRX"
            case  .SCL: return "SCL"
            case  .SKB: return "SKB"
            case  .SI: return "SI"
            case  .JPN: return "JPN"
            case  .USA: return "USA"
            case  .WAL: return "WAL"
            case  .WA: return "WA"
        }
    }

    public func getValue() -> Int
    {
        return rawValue
    }

    func serialize(__parent:DDXMLNode)
    {
        __parent.stringValue = stringValue
    }
}


        
