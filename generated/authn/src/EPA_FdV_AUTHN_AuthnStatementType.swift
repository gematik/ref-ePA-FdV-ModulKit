//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------

import Foundation


public class EPA_FdV_AUTHN_AuthnStatementType : EPA_FdV_AUTHN_StatementAbstractType 
{
    

    var  SubjectLocality:EPA_FdV_AUTHN_SubjectLocalityType?

    var  AuthnContext:EPA_FdV_AUTHN_AuthnContextType=EPA_FdV_AUTHN_AuthnContextType()

    var  AuthnInstant:Date=Date()

    var  SessionIndex:String?

    var  SessionNotOnOrAfter:Date?

    public required init()
    {
        super.init()
    }
    public override func loadWithXml(__node: DDXMLElement, __request:EPA_FdV_AUTHN_RequestResultHandler)
    {
        super.loadWithXml(__node:__node, __request: __request)
        if EPA_FdV_AUTHN_Helper.hasAttribute(node: __node, name:"AuthnInstant", url:"")
        {
            self.AuthnInstant = EPA_FdV_AUTHN_Helper.getDate(stringDate: EPA_FdV_AUTHN_Helper.getAttribute(node: __node, name:"AuthnInstant", url:"")!.stringValue)!
        }
        if EPA_FdV_AUTHN_Helper.hasAttribute(node: __node, name:"SessionIndex", url:"")
        {
            self.SessionIndex = EPA_FdV_AUTHN_Helper.getAttribute(node: __node, name:"SessionIndex", url:"")!.stringValue!
        }
        if EPA_FdV_AUTHN_Helper.hasAttribute(node: __node, name:"SessionNotOnOrAfter", url:"")
        {
            self.SessionNotOnOrAfter = EPA_FdV_AUTHN_Helper.getDate(stringDate: EPA_FdV_AUTHN_Helper.getAttribute(node: __node, name:"SessionNotOnOrAfter", url:"")!.stringValue)
        }
    }

    public override func serialize(__parent:DDXMLElement, __request:EPA_FdV_AUTHN_RequestResultHandler)
    {
        super.serialize(__parent:__parent, __request:__request)
        
            
        let __SubjectLocalityItemElement=__request.writeElement(obj: SubjectLocality, type:EPA_FdV_AUTHN_SubjectLocalityType.self, name:"SubjectLocality", URI:"urn:oasis:names:tc:SAML:2.0:assertion", parent:__parent, skipNullProperty:true)
        if __SubjectLocalityItemElement != nil
        {
            self.SubjectLocality!.serialize(__parent: __SubjectLocalityItemElement!, __request: __request);
        }
            
        let __AuthnContextItemElement=__request.writeElement(obj: AuthnContext, type:EPA_FdV_AUTHN_AuthnContextType.self, name:"AuthnContext", URI:"urn:oasis:names:tc:SAML:2.0:assertion", parent:__parent, skipNullProperty:false)
        if __AuthnContextItemElement != nil
        {
            self.AuthnContext.serialize(__parent: __AuthnContextItemElement!, __request: __request);
        }
            
        let __AuthnInstantItemElement=__request.addAttribute(name: "AuthnInstant", URI:"", stringValue:"", element:__parent)
        __AuthnInstantItemElement.stringValue = EPA_FdV_AUTHN_Helper.getStringFromDateTime(date: self.AuthnInstant);    
            
        if self.SessionIndex != nil
        {
            let __SessionIndexItemElement=__request.addAttribute(name: "SessionIndex", URI:"", stringValue:"", element:__parent)
            __SessionIndexItemElement.stringValue = self.SessionIndex!;
        }
            
        if self.SessionNotOnOrAfter != nil
        {
            let __SessionNotOnOrAfterItemElement=__request.addAttribute(name: "SessionNotOnOrAfter", URI:"", stringValue:"", element:__parent)
            __SessionNotOnOrAfterItemElement.stringValue = EPA_FdV_AUTHN_Helper.getStringFromDateTime(date: self.SessionNotOnOrAfter!);
        }

    }

    public override  func loadProperty(__node: DDXMLElement, __request: EPA_FdV_AUTHN_RequestResultHandler ) -> Bool
    {
        if __node.localName=="SubjectLocality"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "SubjectLocality")
            {
                self.SubjectLocality = try! __request.createObject(node: __node, type:EPA_FdV_AUTHN_SubjectLocalityType.self) as? EPA_FdV_AUTHN_SubjectLocalityType
            }
            return true;
        }
        if __node.localName=="AuthnContext"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "AuthnContext")
            {
                self.AuthnContext = try! __request.createObject(node: __node, type:EPA_FdV_AUTHN_AuthnContextType.self) as! EPA_FdV_AUTHN_AuthnContextType
            }
            return true;
        }
        if __node.localName=="AuthnInstant"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "AuthnInstant")
            {
                self.AuthnInstant = EPA_FdV_AUTHN_Helper.getDate(stringDate: __node.stringValue)!
            }
            return true;
        }
        if __node.localName=="SessionIndex"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "SessionIndex")
            {
                self.SessionIndex = __node.stringValue!
            }
            return true;
        }
        if __node.localName=="SessionNotOnOrAfter"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "SessionNotOnOrAfter")
            {
                self.SessionNotOnOrAfter = EPA_FdV_AUTHN_Helper.getDate(stringDate: __node.stringValue)
            }
            return true;
        }
        return super.loadProperty(__node:__node, __request:__request)
    }
}