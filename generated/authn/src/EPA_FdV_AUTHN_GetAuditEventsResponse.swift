//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------

import Foundation


public class EPA_FdV_AUTHN_GetAuditEventsResponse : NSObject ,EPA_FdV_AUTHN_ISerializableObject
{
    private var  __source:DDXMLNode? = nil
    

    var AuditMessage:[EPA_FdV_AUTHN_AuditMessage?]? = []

    var  Error:EPA_FdV_AUTHN_Error?

    public required override init()
    {
        super.init()
    }
    public func loadWithXml(__node: DDXMLElement, __request:EPA_FdV_AUTHN_RequestResultHandler)
    {
        __source=__node;
        for i :UInt in 0 ..< __node.childCount
        {
            let node=__node.child(at:i)
            if node?.kind==UInt(XMLElementKind)
            {
                let __node=node as! DDXMLElement
                if loadProperty(__node:__node, __request:__request) == false
                {
                }
            }
        }
    }

    public  func serialize(__parent:DDXMLElement, __request:EPA_FdV_AUTHN_RequestResultHandler)
    {
        
            
        if self.AuditMessage != nil
        {
            for __item in self.AuditMessage!
            {
                let __AuditMessageItemElement=__request.writeElement(obj: __item, type:EPA_FdV_AUTHN_AuditMessage.self, name:"AuditMessage", URI:"http://ws.gematik.de/fa/phrext/v1.0", parent:__parent, skipNullProperty:false)
                if __AuditMessageItemElement != nil
                {
                    __item!.serialize(__parent: __AuditMessageItemElement!, __request: __request);
                }
            }
        }
            
        let __ErrorItemElement=__request.writeElement(obj: Error, type:EPA_FdV_AUTHN_Error.self, name:"Error", URI:"http://ws.gematik.de/tel/error/v2.0", parent:__parent, skipNullProperty:true)
        if __ErrorItemElement != nil
        {
            self.Error!.serialize(__parent: __ErrorItemElement!, __request: __request);
        }

    }

    public   func loadProperty(__node: DDXMLElement, __request: EPA_FdV_AUTHN_RequestResultHandler ) -> Bool
    {
        if __node.localName=="AuditMessage"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "AuditMessage")
            {
                if self.AuditMessage == nil
                {
                    self.AuditMessage = []
                }
                self.AuditMessage!.append(try! __request.createObject(node: __node, type:EPA_FdV_AUTHN_AuditMessage.self) as? EPA_FdV_AUTHN_AuditMessage)
            }
            return true;
        }
        if __node.localName=="Error"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "Error")
            {
                self.Error = try! __request.createObject(node: __node, type:EPA_FdV_AUTHN_Error.self) as? EPA_FdV_AUTHN_Error
            }
            return true;
        }
        return false
    }
    public func getOriginalXmlSource() ->DDXMLNode? 
    {
        return __source
    }
}