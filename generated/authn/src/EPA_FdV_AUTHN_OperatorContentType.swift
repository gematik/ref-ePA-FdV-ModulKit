//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------

import Foundation


public class EPA_FdV_AUTHN_OperatorContentType : NSObject ,EPA_FdV_AUTHN_ISerializableObject
{
    private var  __source:DDXMLNode? = nil
    

    var Policy:[EPA_FdV_AUTHN_Policy?]? = []

    var All:[EPA_FdV_AUTHN_OperatorContentType?]? = []

    var ExactlyOne:[EPA_FdV_AUTHN_OperatorContentType?]? = []

    var PolicyReference:[EPA_FdV_AUTHN_PolicyReference?]? = []

    var any=[Any]()

    public required override init()
    {
        super.init()
    }
    public func loadWithXml(__node: DDXMLElement, __request:EPA_FdV_AUTHN_RequestResultHandler)
    {
        __source=__node;
        for i :UInt in 0 ..< __node.childCount
        {
            let node=__node.child(at:i)
            if node?.kind==UInt(XMLElementKind)
            {
                let __node=node as! DDXMLElement
                if loadProperty(__node:__node, __request:__request) == false
                {
                    self.any.append(__request.getAny(node: __node))
                }
            }
        }
    }

    public  func serialize(__parent:DDXMLElement, __request:EPA_FdV_AUTHN_RequestResultHandler)
    {
        
            
        if self.Policy != nil
        {
            for __item in self.Policy!
            {
                let __PolicyItemElement=__request.writeElement(obj: __item, type:EPA_FdV_AUTHN_Policy.self, name:"Policy", URI:"http://schemas.xmlsoap.org/ws/2004/09/policy", parent:__parent, skipNullProperty:false)
                if __PolicyItemElement != nil
                {
                    __item!.serialize(__parent: __PolicyItemElement!, __request: __request);
                }
            }
        }
            
        if self.All != nil
        {
            for __item in self.All!
            {
                let __AllItemElement=__request.writeElement(obj: __item, type:EPA_FdV_AUTHN_OperatorContentType.self, name:"All", URI:"http://schemas.xmlsoap.org/ws/2004/09/policy", parent:__parent, skipNullProperty:false)
                if __AllItemElement != nil
                {
                    __item!.serialize(__parent: __AllItemElement!, __request: __request);
                }
            }
        }
            
        if self.ExactlyOne != nil
        {
            for __item in self.ExactlyOne!
            {
                let __ExactlyOneItemElement=__request.writeElement(obj: __item, type:EPA_FdV_AUTHN_OperatorContentType.self, name:"ExactlyOne", URI:"http://schemas.xmlsoap.org/ws/2004/09/policy", parent:__parent, skipNullProperty:false)
                if __ExactlyOneItemElement != nil
                {
                    __item!.serialize(__parent: __ExactlyOneItemElement!, __request: __request);
                }
            }
        }
            
        if self.PolicyReference != nil
        {
            for __item in self.PolicyReference!
            {
                let __PolicyReferenceItemElement=__request.writeElement(obj: __item, type:EPA_FdV_AUTHN_PolicyReference.self, name:"PolicyReference", URI:"http://schemas.xmlsoap.org/ws/2004/09/policy", parent:__parent, skipNullProperty:false)
                if __PolicyReferenceItemElement != nil
                {
                    __item!.serialize(__parent: __PolicyReferenceItemElement!, __request: __request);
                }
            }
        }
            
        for case let elem as DDXMLNode in self.any
        {
            elem.detach()
            __parent.addChild(elem)
        }

    }

    public   func loadProperty(__node: DDXMLElement, __request: EPA_FdV_AUTHN_RequestResultHandler ) -> Bool
    {
        if __node.localName=="Policy"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "Policy")
            {
                if self.Policy == nil
                {
                    self.Policy = []
                }
                self.Policy!.append(try! __request.createObject(node: __node, type:EPA_FdV_AUTHN_Policy.self) as? EPA_FdV_AUTHN_Policy)
            }
            return true;
        }
        if __node.localName=="All"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "All")
            {
                if self.All == nil
                {
                    self.All = []
                }
                self.All!.append(try! __request.createObject(node: __node, type:EPA_FdV_AUTHN_OperatorContentType.self) as? EPA_FdV_AUTHN_OperatorContentType)
            }
            return true;
        }
        if __node.localName=="ExactlyOne"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "ExactlyOne")
            {
                if self.ExactlyOne == nil
                {
                    self.ExactlyOne = []
                }
                self.ExactlyOne!.append(try! __request.createObject(node: __node, type:EPA_FdV_AUTHN_OperatorContentType.self) as? EPA_FdV_AUTHN_OperatorContentType)
            }
            return true;
        }
        if __node.localName=="PolicyReference"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "PolicyReference")
            {
                if self.PolicyReference == nil
                {
                    self.PolicyReference = []
                }
                self.PolicyReference!.append(try! __request.createObject(node: __node, type:EPA_FdV_AUTHN_PolicyReference.self) as? EPA_FdV_AUTHN_PolicyReference)
            }
            return true;
        }
        return false
    }
    public func getOriginalXmlSource() ->DDXMLNode? 
    {
        return __source
    }
}