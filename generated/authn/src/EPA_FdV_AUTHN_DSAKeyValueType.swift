//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------

import Foundation


public class EPA_FdV_AUTHN_DSAKeyValueType : NSObject ,EPA_FdV_AUTHN_ISerializableObject
{
    private var  __source:DDXMLNode? = nil
    

    var  P:Data=Data()

    var  Q:Data=Data()

    var  G:Data?=Data()

    var  Y:Data=Data()

    var  J:Data?=Data()

    var  Seed:Data=Data()

    var  PgenCounter:Data=Data()

    public required override init()
    {
        super.init()
    }
    public func loadWithXml(__node: DDXMLElement, __request:EPA_FdV_AUTHN_RequestResultHandler)
    {
        __source=__node;
        for i :UInt in 0 ..< __node.childCount
        {
            let node=__node.child(at:i)
            if node?.kind==UInt(XMLElementKind)
            {
                let __node=node as! DDXMLElement
                if loadProperty(__node:__node, __request:__request) == false
                {
                }
            }
        }
    }

    public  func serialize(__parent:DDXMLElement, __request:EPA_FdV_AUTHN_RequestResultHandler)
    {
        
            
        let __PItemElement=__request.writeElement(obj: P, type:Data.self, name:"P", URI:"http://www.w3.org/2000/09/xmldsig#", parent:__parent, skipNullProperty:false)
        if __PItemElement != nil
        {
            __request.setBinary(propertyElement: __PItemElement!, data:self.P, isSwaRef:false, isAttribute:false);
        }
            
        let __QItemElement=__request.writeElement(obj: Q, type:Data.self, name:"Q", URI:"http://www.w3.org/2000/09/xmldsig#", parent:__parent, skipNullProperty:false)
        if __QItemElement != nil
        {
            __request.setBinary(propertyElement: __QItemElement!, data:self.Q, isSwaRef:false, isAttribute:false);
        }
            
        let __GItemElement=__request.writeElement(obj: G, type:Data.self, name:"G", URI:"http://www.w3.org/2000/09/xmldsig#", parent:__parent, skipNullProperty:true)
        if __GItemElement != nil
        {
            __request.setBinary(propertyElement: __GItemElement!, data:self.G!, isSwaRef:false, isAttribute:false);
        }
            
        let __YItemElement=__request.writeElement(obj: Y, type:Data.self, name:"Y", URI:"http://www.w3.org/2000/09/xmldsig#", parent:__parent, skipNullProperty:false)
        if __YItemElement != nil
        {
            __request.setBinary(propertyElement: __YItemElement!, data:self.Y, isSwaRef:false, isAttribute:false);
        }
            
        let __JItemElement=__request.writeElement(obj: J, type:Data.self, name:"J", URI:"http://www.w3.org/2000/09/xmldsig#", parent:__parent, skipNullProperty:true)
        if __JItemElement != nil
        {
            __request.setBinary(propertyElement: __JItemElement!, data:self.J!, isSwaRef:false, isAttribute:false);
        }
            
        let __SeedItemElement=__request.writeElement(obj: Seed, type:Data.self, name:"Seed", URI:"http://www.w3.org/2000/09/xmldsig#", parent:__parent, skipNullProperty:false)
        if __SeedItemElement != nil
        {
            __request.setBinary(propertyElement: __SeedItemElement!, data:self.Seed, isSwaRef:false, isAttribute:false);
        }
            
        let __PgenCounterItemElement=__request.writeElement(obj: PgenCounter, type:Data.self, name:"PgenCounter", URI:"http://www.w3.org/2000/09/xmldsig#", parent:__parent, skipNullProperty:false)
        if __PgenCounterItemElement != nil
        {
            __request.setBinary(propertyElement: __PgenCounterItemElement!, data:self.PgenCounter, isSwaRef:false, isAttribute:false);
        }

    }

    public   func loadProperty(__node: DDXMLElement, __request: EPA_FdV_AUTHN_RequestResultHandler ) -> Bool
    {
        if __node.localName=="P"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "P")
            {
                self.P = __request.getBinary(element: __node,isSwaRef:false, isAttribute:false)
            }
            return true;
        }
        if __node.localName=="Q"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "Q")
            {
                self.Q = __request.getBinary(element: __node,isSwaRef:false, isAttribute:false)
            }
            return true;
        }
        if __node.localName=="G"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "G")
            {
                self.G = __request.getBinary(element: __node,isSwaRef:false, isAttribute:false)
            }
            return true;
        }
        if __node.localName=="Y"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "Y")
            {
                self.Y = __request.getBinary(element: __node,isSwaRef:false, isAttribute:false)
            }
            return true;
        }
        if __node.localName=="J"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "J")
            {
                self.J = __request.getBinary(element: __node,isSwaRef:false, isAttribute:false)
            }
            return true;
        }
        if __node.localName=="Seed"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "Seed")
            {
                self.Seed = __request.getBinary(element: __node,isSwaRef:false, isAttribute:false)
            }
            return true;
        }
        if __node.localName=="PgenCounter"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "PgenCounter")
            {
                self.PgenCounter = __request.getBinary(element: __node,isSwaRef:false, isAttribute:false)
            }
            return true;
        }
        return false
    }
    public func getOriginalXmlSource() ->DDXMLNode? 
    {
        return __source
    }
}