//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------

import Foundation


public class EPA_FdV_AUTHN_AssertionType : NSObject ,EPA_FdV_AUTHN_ISerializableObject
{
    private var  __source:DDXMLNode? = nil
    

    var  Issuer:EPA_FdV_AUTHN_NameIDType=EPA_FdV_AUTHN_NameIDType()

    var  Signature:EPA_FdV_AUTHN_SignatureType?

    var  Subject:EPA_FdV_AUTHN_SubjectType?

    var  Conditions:EPA_FdV_AUTHN_ConditionsType?

    var  Advice:EPA_FdV_AUTHN_AdviceType?

    var Statement:[EPA_FdV_AUTHN_StatementAbstractType?]? = []

    var AuthnStatement:[EPA_FdV_AUTHN_AuthnStatementType?]? = []

    var AuthzDecisionStatement:[EPA_FdV_AUTHN_AuthzDecisionStatementType?]? = []

    var AttributeStatement:[EPA_FdV_AUTHN_AttributeStatementType?]? = []

    var  Version:String=""

    var  ID:String=""

    var  IssueInstant:Date=Date()

    public required override init()
    {
        super.init()
    }
    public func loadWithXml(__node: DDXMLElement, __request:EPA_FdV_AUTHN_RequestResultHandler)
    {
        __source=__node;
        for i :UInt in 0 ..< __node.childCount
        {
            let node=__node.child(at:i)
            if node?.kind==UInt(XMLElementKind)
            {
                let __node=node as! DDXMLElement
                if loadProperty(__node:__node, __request:__request) == false
                {
                }
            }
        }
        if EPA_FdV_AUTHN_Helper.hasAttribute(node: __node, name:"Version", url:"")
        {
            self.Version = EPA_FdV_AUTHN_Helper.getAttribute(node: __node, name:"Version", url:"")!.stringValue!
        }
        if EPA_FdV_AUTHN_Helper.hasAttribute(node: __node, name:"ID", url:"")
        {
            self.ID = EPA_FdV_AUTHN_Helper.getAttribute(node: __node, name:"ID", url:"")!.stringValue!
        }
        if EPA_FdV_AUTHN_Helper.hasAttribute(node: __node, name:"IssueInstant", url:"")
        {
            self.IssueInstant = EPA_FdV_AUTHN_Helper.getDate(stringDate: EPA_FdV_AUTHN_Helper.getAttribute(node: __node, name:"IssueInstant", url:"")!.stringValue)!
        }
    }

    public  func serialize(__parent:DDXMLElement, __request:EPA_FdV_AUTHN_RequestResultHandler)
    {
        
            
        let __IssuerItemElement=__request.writeElement(obj: Issuer, type:EPA_FdV_AUTHN_NameIDType.self, name:"Issuer", URI:"urn:oasis:names:tc:SAML:2.0:assertion", parent:__parent, skipNullProperty:false)
        if __IssuerItemElement != nil
        {
            self.Issuer.serialize(__parent: __IssuerItemElement!, __request: __request);
        }
            
        let __SignatureItemElement=__request.writeElement(obj: Signature, type:EPA_FdV_AUTHN_SignatureType.self, name:"Signature", URI:"http://www.w3.org/2000/09/xmldsig#", parent:__parent, skipNullProperty:true)
        if __SignatureItemElement != nil
        {
            self.Signature!.serialize(__parent: __SignatureItemElement!, __request: __request);
        }
            
        let __SubjectItemElement=__request.writeElement(obj: Subject, type:EPA_FdV_AUTHN_SubjectType.self, name:"Subject", URI:"urn:oasis:names:tc:SAML:2.0:assertion", parent:__parent, skipNullProperty:true)
        if __SubjectItemElement != nil
        {
            self.Subject!.serialize(__parent: __SubjectItemElement!, __request: __request);
        }
            
        let __ConditionsItemElement=__request.writeElement(obj: Conditions, type:EPA_FdV_AUTHN_ConditionsType.self, name:"Conditions", URI:"urn:oasis:names:tc:SAML:2.0:assertion", parent:__parent, skipNullProperty:true)
        if __ConditionsItemElement != nil
        {
            self.Conditions!.serialize(__parent: __ConditionsItemElement!, __request: __request);
        }
            
        let __AdviceItemElement=__request.writeElement(obj: Advice, type:EPA_FdV_AUTHN_AdviceType.self, name:"Advice", URI:"urn:oasis:names:tc:SAML:2.0:assertion", parent:__parent, skipNullProperty:true)
        if __AdviceItemElement != nil
        {
            self.Advice!.serialize(__parent: __AdviceItemElement!, __request: __request);
        }
            
        if self.Statement != nil
        {
            for __item in self.Statement!
            {
                let __StatementItemElement=__request.writeElement(obj: __item, type:EPA_FdV_AUTHN_StatementAbstractType.self, name:"Statement", URI:"urn:oasis:names:tc:SAML:2.0:assertion", parent:__parent, skipNullProperty:false)
                if __StatementItemElement != nil
                {
                    __item!.serialize(__parent: __StatementItemElement!, __request: __request);
                }
            }
        }
            
        if self.AuthnStatement != nil
        {
            for __item in self.AuthnStatement!
            {
                let __AuthnStatementItemElement=__request.writeElement(obj: __item, type:EPA_FdV_AUTHN_AuthnStatementType.self, name:"AuthnStatement", URI:"urn:oasis:names:tc:SAML:2.0:assertion", parent:__parent, skipNullProperty:false)
                if __AuthnStatementItemElement != nil
                {
                    __item!.serialize(__parent: __AuthnStatementItemElement!, __request: __request);
                }
            }
        }
            
        if self.AuthzDecisionStatement != nil
        {
            for __item in self.AuthzDecisionStatement!
            {
                let __AuthzDecisionStatementItemElement=__request.writeElement(obj: __item, type:EPA_FdV_AUTHN_AuthzDecisionStatementType.self, name:"AuthzDecisionStatement", URI:"urn:oasis:names:tc:SAML:2.0:assertion", parent:__parent, skipNullProperty:false)
                if __AuthzDecisionStatementItemElement != nil
                {
                    __item!.serialize(__parent: __AuthzDecisionStatementItemElement!, __request: __request);
                }
            }
        }
            
        if self.AttributeStatement != nil
        {
            for __item in self.AttributeStatement!
            {
                let __AttributeStatementItemElement=__request.writeElement(obj: __item, type:EPA_FdV_AUTHN_AttributeStatementType.self, name:"AttributeStatement", URI:"urn:oasis:names:tc:SAML:2.0:assertion", parent:__parent, skipNullProperty:false)
                if __AttributeStatementItemElement != nil
                {
                    __item!.serialize(__parent: __AttributeStatementItemElement!, __request: __request);
                }
            }
        }
            
        let __VersionItemElement=__request.addAttribute(name: "Version", URI:"", stringValue:"", element:__parent)
        __VersionItemElement.stringValue = self.Version;    
            
        let __IDItemElement=__request.addAttribute(name: "ID", URI:"", stringValue:"", element:__parent)
        __IDItemElement.stringValue = self.ID;    
            
        let __IssueInstantItemElement=__request.addAttribute(name: "IssueInstant", URI:"", stringValue:"", element:__parent)
        __IssueInstantItemElement.stringValue = EPA_FdV_AUTHN_Helper.getStringFromDateTime(date: self.IssueInstant);    

    }

    public   func loadProperty(__node: DDXMLElement, __request: EPA_FdV_AUTHN_RequestResultHandler ) -> Bool
    {
        if __node.localName=="Issuer"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "Issuer")
            {
                self.Issuer = try! __request.createObject(node: __node, type:EPA_FdV_AUTHN_NameIDType.self) as! EPA_FdV_AUTHN_NameIDType
            }
            return true;
        }
        if __node.localName=="Signature"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "Signature")
            {
                self.Signature = try! __request.createObject(node: __node, type:EPA_FdV_AUTHN_SignatureType.self) as? EPA_FdV_AUTHN_SignatureType
            }
            return true;
        }
        if __node.localName=="Subject"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "Subject")
            {
                self.Subject = try! __request.createObject(node: __node, type:EPA_FdV_AUTHN_SubjectType.self) as? EPA_FdV_AUTHN_SubjectType
            }
            return true;
        }
        if __node.localName=="Conditions"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "Conditions")
            {
                self.Conditions = try! __request.createObject(node: __node, type:EPA_FdV_AUTHN_ConditionsType.self) as? EPA_FdV_AUTHN_ConditionsType
            }
            return true;
        }
        if __node.localName=="Advice"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "Advice")
            {
                self.Advice = try! __request.createObject(node: __node, type:EPA_FdV_AUTHN_AdviceType.self) as? EPA_FdV_AUTHN_AdviceType
            }
            return true;
        }
        if __node.localName=="Statement"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "Statement")
            {
                if self.Statement == nil
                {
                    self.Statement = []
                }
                self.Statement!.append(try! __request.createObject(node: __node, type:EPA_FdV_AUTHN_StatementAbstractType.self) as? EPA_FdV_AUTHN_StatementAbstractType)
            }
            return true;
        }
        if __node.localName=="AuthnStatement"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "AuthnStatement")
            {
                if self.AuthnStatement == nil
                {
                    self.AuthnStatement = []
                }
                self.AuthnStatement!.append(try! __request.createObject(node: __node, type:EPA_FdV_AUTHN_AuthnStatementType.self) as? EPA_FdV_AUTHN_AuthnStatementType)
            }
            return true;
        }
        if __node.localName=="AuthzDecisionStatement"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "AuthzDecisionStatement")
            {
                if self.AuthzDecisionStatement == nil
                {
                    self.AuthzDecisionStatement = []
                }
                self.AuthzDecisionStatement!.append(try! __request.createObject(node: __node, type:EPA_FdV_AUTHN_AuthzDecisionStatementType.self) as? EPA_FdV_AUTHN_AuthzDecisionStatementType)
            }
            return true;
        }
        if __node.localName=="AttributeStatement"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "AttributeStatement")
            {
                if self.AttributeStatement == nil
                {
                    self.AttributeStatement = []
                }
                self.AttributeStatement!.append(try! __request.createObject(node: __node, type:EPA_FdV_AUTHN_AttributeStatementType.self) as? EPA_FdV_AUTHN_AttributeStatementType)
            }
            return true;
        }
        if __node.localName=="Version"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "Version")
            {
                self.Version = __node.stringValue!
            }
            return true;
        }
        if __node.localName=="ID"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "ID")
            {
                self.ID = __node.stringValue!
            }
            return true;
        }
        if __node.localName=="IssueInstant"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "IssueInstant")
            {
                self.IssueInstant = EPA_FdV_AUTHN_Helper.getDate(stringDate: __node.stringValue)!
            }
            return true;
        }
        return false
    }
    public func getOriginalXmlSource() ->DDXMLNode? 
    {
        return __source
    }
}