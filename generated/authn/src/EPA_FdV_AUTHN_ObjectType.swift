//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.7.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------

import Foundation


public class EPA_FdV_AUTHN_ObjectType : NSObject ,EPA_FdV_AUTHN_ISerializableObject
{
    private var  __source:DDXMLNode? = nil
    

    var  Id:String?

    var  MimeType:String?

    var  Encoding:String?

    var any=[Any]()

    public required override init()
    {
        super.init()
    }
    public func loadWithXml(__node: DDXMLElement, __request:EPA_FdV_AUTHN_RequestResultHandler)
    {
        __source=__node;
        for i :UInt in 0 ..< __node.childCount
        {
            let node=__node.child(at:i)
            if node?.kind==UInt(XMLElementKind)
            {
                let __node=node as! DDXMLElement
                if loadProperty(__node:__node, __request:__request) == false
                {
                    self.any.append(__request.getAny(node: __node))
                }
            }
        }
        if EPA_FdV_AUTHN_Helper.hasAttribute(node: __node, name:"Id", url:"")
        {
            self.Id = EPA_FdV_AUTHN_Helper.getAttribute(node: __node, name:"Id", url:"")!.stringValue!
        }
        if EPA_FdV_AUTHN_Helper.hasAttribute(node: __node, name:"MimeType", url:"")
        {
            self.MimeType = EPA_FdV_AUTHN_Helper.getAttribute(node: __node, name:"MimeType", url:"")!.stringValue!
        }
        if EPA_FdV_AUTHN_Helper.hasAttribute(node: __node, name:"Encoding", url:"")
        {
            self.Encoding = EPA_FdV_AUTHN_Helper.getAttribute(node: __node, name:"Encoding", url:"")!.stringValue!
        }
    }

    public  func serialize(__parent:DDXMLElement, __request:EPA_FdV_AUTHN_RequestResultHandler)
    {
        
            
        if self.Id != nil
        {
            let __IdItemElement=__request.addAttribute(name: "Id", URI:"", stringValue:"", element:__parent)
            __IdItemElement.stringValue = self.Id!;
        }
            
        if self.MimeType != nil
        {
            let __MimeTypeItemElement=__request.addAttribute(name: "MimeType", URI:"", stringValue:"", element:__parent)
            __MimeTypeItemElement.stringValue = self.MimeType!;
        }
            
        if self.Encoding != nil
        {
            let __EncodingItemElement=__request.addAttribute(name: "Encoding", URI:"", stringValue:"", element:__parent)
            __EncodingItemElement.stringValue = self.Encoding!;
        }
            
        for case let elem as DDXMLNode in self.any
        {
            elem.detach()
            __parent.addChild(elem)
        }

    }

    public   func loadProperty(__node: DDXMLElement, __request: EPA_FdV_AUTHN_RequestResultHandler ) -> Bool
    {
        if __node.localName=="Id"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "Id")
            {
                self.Id = __node.stringValue!
            }
            return true;
        }
        if __node.localName=="MimeType"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "MimeType")
            {
                self.MimeType = __node.stringValue!
            }
            return true;
        }
        if __node.localName=="Encoding"
        {
            if EPA_FdV_AUTHN_Helper.isValue(node:__node, name: "Encoding")
            {
                self.Encoding = __node.stringValue!
            }
            return true;
        }
        return false
    }
    public func getOriginalXmlSource() ->DDXMLNode? 
    {
        return __source
    }
}